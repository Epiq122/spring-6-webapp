package guru.springframework.spring6webapp.domain;import jakarta.persistence.*;import java.util.Objects;import java.util.Set;@Entitypublic class Publisher {    @Id    @GeneratedValue(strategy = GenerationType.AUTO)    private Long id;    private String publisherName;    private String address;    private String city;    private String province;    private String postalCode;    @OneToMany(mappedBy = "publisher")    private Set<Book> books;    public Long getId() {        return id;    }    public void setId(Long id) {        this.id = id;    }    public String getPublisherName() {        return publisherName;    }    public void setPublisherName(String publisherName) {        this.publisherName = publisherName;    }    public String getAddress() {        return address;    }    public void setAddress(String address) {        this.address = address;    }    public String getCity() {        return city;    }    public void setCity(String city) {        this.city = city;    }    public String getProvince() {        return province;    }    public void setProvince(String province) {        this.province = province;    }    public String getPostalCode() {        return postalCode;    }    public void setPostalCode(String postalCode) {        this.postalCode = postalCode;    }    @Override    public String toString() {        return "Publisher{" +                "id=" + id +                ", publisherName='" + publisherName + '\'' +                ", address='" + address + '\'' +                ", city='" + city + '\'' +                ", province='" + province + '\'' +                ", postalCode='" + postalCode + '\'' +                '}';    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        Publisher publisher = (Publisher) o;        return Objects.equals(id, publisher.id);    }    @Override    public int hashCode() {        return id != null ? id.hashCode() : 0;    }}